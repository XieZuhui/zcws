<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE generatorConfiguration

        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"

        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration >

   <!--修改为自己的mysql连接jar包-->
 <classPathEntry location="F:\JavawebSpace\crm\src\main\webapp\WEB-INF\lib\mysql-connector-java-5.1.43.jar"/>

   <context id="context1" >
      <commentGenerator  >
         <property name="javaFileEncoding" value="UTF-8"/>
         <property name="suppressAllComments" value="false" />
         <property name="suppressDate" value="true"/>
      </commentGenerator>
      <!--选择数据库的driverClass与connectionURL-->
      <jdbcConnection driverClass="com.mysql.jdbc.Driver"
                      connectionURL="jdbc:mysql://localhost:3306/zcw"
                      userId="root"
                      password="123456" />

      <!--生成实体类 指定包名 以及生成的地址 （可以自定义地址，但是路径不存在不会自动创建  使用Maven生成在target目录下，会自动创建） -->
      <javaModelGenerator targetPackage="cn.zcw.bean"
                          targetProject="src/main/java" >
         <property name="enableSubPackages" value="true"/>
         <!-- 如果true，MBG会根据catalog和schema来生成子包。如果false就会直接用targetPackage属性。默认为false -->
         <property name="trimStrings" value="true" />
         <!-- 当数据库字段使用CHAR时，建议在<javaModelGenerator>中设 -->
      </javaModelGenerator>

      <!--生成Mapper文件 -->
      <sqlMapGenerator targetPackage="cn.zcw.mapper"  targetProject="src/main/java" />

      <!--生成Dao文件 可以配置 type="XMLMAPPER"生成xml的dao实现 -->
   <javaClientGenerator targetPackage="cn.zcw.mapper" targetProject="src/main/java" type="XMLMAPPER" />

      <!-- 指定数据库表 -->
      <!-- 要生成的表 tableName是数据库中的表名或视图名 domainObjectName是实体类名-->
      <!--<table tableName="t_account_type_cert" domainObjectName="Account_type_cert"></table>
      <table tableName="t_accttype" domainObjectName="Accttype"></table>
      <table tableName="t_advertisement" domainObjectName="Advertisement"></table>
      <table tableName="t_cert" domainObjectName="Cert"></table>
      <table tableName="t_dictionary" domainObjectName="Aictionary"></table>
      <table tableName="t_member" domainObjectName="Member"></table>
      <table tableName="t_member_address" domainObjectName="Member_address"></table>
      <table tableName="t_member_cert" domainObjectName="Member_cert"></table>
      <table tableName="t_member_copy" domainObjectName="Member_copy"></table>
      <table tableName="t_member_project_follow" domainObjectName="Member_project_follow"></table>
      <table tableName="t_message" domainObjectName="Message"></table>
      <table tableName="t_order" domainObjectName="Order"></table>
      <table tableName="t_param" domainObjectName="Param"></table>
      <table tableName="t_permission" domainObjectName="Permission"></table>
      <table tableName="t_project" domainObjectName="Project"></table>
      <table tableName="t_project_tag" domainObjectName="Project_tag"></table>
      <table tableName="t_project_type" domainObjectName="Project_type"></table>
      <table tableName="t_return" domainObjectName="Return"></table>
      <table tableName="t_role" domainObjectName="Role"></table>
      <table tableName="t_role_permission" domainObjectName="Role_permission"></table>
      <table tableName="t_tag" domainObjectName="Tag"></table>
      <table tableName="t_ticket" domainObjectName="Ticket"></table>
      <table tableName="t_type" domainObjectName="Type"></table>
      <table tableName="t_user" domainObjectName="User"></table>
      <table tableName="t_user_role" domainObjectName="User_role"></table>-->
     <!-- <table tableName="t_project_member" domainObjectName="Project_member"></table>t_member-->
       <table tableName="t_member" domainObjectName="Member"></table>
   </context>
</generatorConfiguration>